{"version":3,"file":"webservices.min.js","sources":["../src/webservices.js"],"sourcesContent":["import {call as fetchMany} from 'core/ajax';\n\n/**\n * Get all converstations a User can see.\n * @param {int} userid\n * @param {int} contextid\n * @returns {mixed}\n */\nexport const getAllConversations = (\n    userid,\n    contextid,\n) => fetchMany([{\n    methodname: 'block_ai_chat_get_all_conversations',\n    args: {\n        userid,\n        contextid\n}}])[0];\n\n/**\n * Get all converstations a User can see.\n * @param {int} contextid\n * @returns {mixed}\n */\nexport const getNewConversationId = (\n    contextid,\n) => fetchMany([{\n    methodname: 'block_ai_chat_get_new_conversation_id',\n    args: {\n        contextid,\n}}])[0];\n\n/**\n * Get all converstations a User can see.\n * @param {int} contextid\n * @param {int} userid\n * @param {int} conversationid\n * @returns {mixed}\n */\nexport const deleteConversation = (\n    contextid,\n    userid,\n    conversationid,\n) => fetchMany([{\n    methodname: 'block_ai_chat_delete_conversation',\n    args: {\n        contextid,\n        userid,\n        conversationid,\n}}])[0];\n\n/**\n * Get conversationcontext message limit.\n * @param {int} contextid\n * @returns {mixed}\n */\nexport const getConversationcontextLimit = (\n    contextid,\n) => fetchMany([{\n    methodname: 'block_ai_chat_get_conversationcontext_limit',\n    args: {\n        contextid\n}}])[0];\n"],"names":["userid","contextid","methodname","args","conversationid"],"mappings":"6SAQmC,CAC/BA,OACAC,aACC,cAAU,CAAC,CACZC,WAAY,sCACZC,KAAM,CACFH,OAAAA,OACAC,UAAAA,cACH,iCAQDA,YACC,cAAU,CAAC,CACZC,WAAY,wCACZC,KAAM,CACFF,UAAAA,cACH,+BAS6B,CAC9BA,UACAD,OACAI,kBACC,cAAU,CAAC,CACZF,WAAY,oCACZC,KAAM,CACFF,UAAAA,UACAD,OAAAA,OACAI,eAAAA,mBACH,wCAQDH,YACC,cAAU,CAAC,CACZC,WAAY,8CACZC,KAAM,CACFF,UAAAA,cACH"}